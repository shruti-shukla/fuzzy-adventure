# To create a customizable workflow that will - 
# - have clear permissions
# - take inputs and use them to run only specified checks
# - handle errors
# - create a SARIF and upload it as an artifact
#  - upload the SARIF file to code scanning service
# Dependabot example workflow file: https://github.com/github/dependabot-api/blob/main/app/actions/run_updater/actions/workflow.rb

name: Security Checks for Actions on Marketplace
on: # dynamic
  workflow_dispatch:
  push: 

jobs: 
  run-security-checks:
    
    name: Actions Security Checks
    #strategy:
     # matrix:
      #  os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ubuntu-latest #${{ matrix.os }}
    env: 
      CHECK_NAMES: "Dangerous-Workflow,Binary-Artifacts,Branch-Protection,Code-Review,Dependency-Update-Tool,Vulnerabilities,Pinned-Dependencies,SAST,Security-Policy"
      REPO: "github.com/${{ github.repository }}"
      POLICY_FILE: "policy.yaml"
      OUTPUT_FORMAT: "sarif"
      GITHUB_AUTH_TOKEN: ${{ secrets.OSSF_PAT }}
      ENABLE_SARIF: true
      OUTPUT_FILE: results.sarif
     
    steps:
      - uses: actions/checkout@v1
      
      - name: Print runner OS
        run: echo " ${{ runner.os }}
      
      # Set up Go Environment 
      # This step may only be required for self-hosted runners, as GH hosted runners already have Go installed
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0

      - if: ${{ runner.os }} == "Windows"
        name: Install OSSF Tool & Run Analysis on Windows Runners
        run: |
             curl -OL https://github.com/ossf/scorecard/releases/download/v4.10.2/scorecard_4.10.2_windows_amd64.tar.gz
             tar -xvzf scorecard_4.10.2_windows_amd64.tar.gz
             scorecard-windows-amd64.exe --repo=$REPO --checks=$CHECK_NAMES --policy=$POLICY_FILE --format=$OUTPUT_FORMAT > $OUTPUT_FILE
             
      - if: ${{ runner.os }} == "Linux" || ${{ runner.os }} == "macOS" 
        name: Install OSSF Tool & Run Analysis on Linux/MacOS Runners
        run: |
             curl -OL https://github.com/ossf/scorecard/releases/download/v4.10.2/scorecard_4.10.2_linux_amd64.tar.gz
             tar -xf scorecard_4.10.2_linux_amd64.tar.gz
             ./scorecard-linux-amd64 --repo=$REPO --checks=$CHECK_NAMES --policy=$POLICY_FILE --format=$OUTPUT_FORMAT > $OUTPUT_FILE
             
           
      # Create/Modify Sarif using the Output
      # Store SARIF ID as artifact
      # Upload SARIF file to Code scanning service
    

