# To create a customizable workflow that will - 
# - have clear permissions
# - take inputs and use them to run only specified checks
# - handle errors
# - create a SARIF and upload it as an artifact
#  - upload the SARIF file to code scanning service
# Dependabot example workflow file: https://github.com/github/dependabot-api/blob/main/app/actions/run_updater/actions/workflow.rb

name: Security Checks for Actions on Marketplace
on: # dynamic
  workflow_dispatch:
  push: 

jobs: 
  run-security-checks:
    
    name: Actions Security Checks
    # Permissions only added for now
    # We can use the same installation access token for Uploading Sarif to codescanning with below permissions
    permissions: 
      contents: read
      security-events: write #To Upload SARIF to the Code scanning service
      
    # strategy:
    #   matrix:
    #    os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: windows-latest # ${{ matrix.os }}
    env: 
      CHECK_NAMES: "Dangerous-Workflow,Binary-Artifacts,Branch-Protection,Code-Review,Dependency-Update-Tool,Vulnerabilities,Pinned-Dependencies,SAST,Security-Policy"
      REPO: "github.com/${{ github.repository }}"
      POLICY_FILE: "policy.yaml"
      OUTPUT_FORMAT: "sarif"
      GITHUB_AUTH_TOKEN: ${{ secrets.OSSF_PAT }}
      ENABLE_SARIF: true
      OUTPUT_FILE: results.sarif
     
    steps:
      - uses: actions/checkout@v1

      # Set up Go Environment 
      # This step may only be required for self-hosted runners, as GH hosted runners already have Go installed
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
        
      - if: ${{ runner.os == 'Windows' }} 
        name: Install OSSF Command Line Tool on Windows Runners
        run: |
             curl -OL https://github.com/ossf/scorecard/releases/download/v4.10.2/scorecard_4.10.2_windows_amd64.tar.gz
             tar -xvzf scorecard_4.10.2_windows_amd64.tar.gz
        shell: cmd
  
      - if: ${{ runner.os != 'Windows' }} 
        name: Install OSSF Command Line Tool on Linux/MacOS Runners
        run: |
             curl -OL https://github.com/ossf/scorecard/releases/download/v4.10.2/scorecard_4.10.2_linux_amd64.tar.gz
             tar -xf scorecard_4.10.2_linux_amd64.tar.gz
             
      - if: ${{ runner.os == 'Windows' }} 
        name: Create a Policy File & Run Analysis on Windows Runners
        run: |
             (echo ${{ vars.POLICY_WINDOWS }}) > %POLICY_FILE%
             type %POLICY_FILE%
        shell: cmd
      
      # For Windows Runners
      - if: ${{ runner.os == 'Windows' }} 
        name: Create a Policy File & Run Analysis on Windows Runners
        run: |
             scorecard-windows-amd64.exe --repo=%REPO% --checks=%CHECK_NAMES% --policy=%POLICY_FILE% --format=%OUTPUT_FORMAT% > %OUTPUT_FILE%
             type %OUTPUT_FILE%
        shell: cmd
             
      - if: ${{ runner.os == 'Windows' }} 
        name: Change tool name to Scorecard-for-Marketplace-Actions in SARIF file
        run: |
             $OUTPUT_FILE -replace "Scorecard","Scorecard-for-Marketplace-Actions"
             cat $OUTPUT_FILE
        shell: pwsh
        #get-content $OUTPUT_FILE | 

      - if: ${{ (runner.os == 'Linux') || (runner.os == 'macOS') }} 
        name: Create a Policy File & Run Analysis on Linux/MacOS Runners
        run: |
             echo "${{ vars.POLICY }}" >> $POLICY_FILE
             ./scorecard-linux-amd64 --repo=$REPO --checks=$CHECK_NAMES --policy=$POLICY_FILE --format=$OUTPUT_FORMAT > $OUTPUT_FILE
             
      - if: ${{ (runner.os == 'Linux') || (runner.os == 'macOS') }}
        name: Change tool name to Scorecard-for-Marketplace-Actions in SARIF file
        run: |
             sed -i 's/Scorecard/Scorecard-for-Marketplace-Actions/g' $OUTPUT_FILE
             cat $OUTPUT_FILE

      # Store SARIF file as an artifact
      - name: "Upload artifact"
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: SARIF file
          path: ${{ env.OUTPUT_FILE }}
          retention-days: 5

      - name: "Upload results to code-scanning service"
        id: sarif-upload
        uses: github/codeql-action/upload-sarif@17573ee1cc1b9d061760f3a006fc4aac4f944fd5 # v2.2.4
        with:
          sarif_file: ${{ env.OUTPUT_FILE }}
          # token: 
      
      - name: Print SARIF-ID
        run: echo "${{ steps.sarif-upload.outputs.sarif-id }}"
          
